.PHONY: all
default: all

TARGET?=linux64
ifeq ($(TARGET),linux64)
LIB64=1
TOOLCHAIN_ARCH=x86_64
RHEL_ARCH=x86_64
MESON_CPU_FAMILY=x86_64
MESON_CPU=x86_64
KERNEL_ARCH=x86
else
ifeq ($(TARGET),linux32)
LIB64=0
TOOLCHAIN_ARCH=i686
RHEL_ARCH=i386
MESON_CPU_FAMILY=x86
MESON_CPU=x86
KERNEL_ARCH=x86
else
ifeq ($(TARGET),linux-arm64)
LIB64=1
TOOLCHAIN_ARCH=aarch64
RHEL_ARCH=aarch64
MESON_CPU_FAMILY=aarch64
MESON_CPU=aarch64
KERNEL_ARCH=arm64
else
$(error Uknown target $(TARGET))
endif
endif
endif
TOOLCHAIN_TARGET=$(TOOLCHAIN_ARCH)-rexuiz-linux-gnu
TOOLCHAIN_DIRECTORY=$(shell pwd)/toolchain/$(TOOLCHAIN_ARCH)
MESON_CROSS_TXT=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/meson-cross.txt

GMP_VERSION=6.0.0
GMP_DIRECTORY=gmp-$(GMP_VERSION)
GMP_TARBALL=$(GMP_DIRECTORY)a.tar.xz
GMP_DIRECTORY_STAMP=$(GMP_DIRECTORY)/stamp
GMP_URL=http://ftpmirror.gnu.org/gmp/$(GMP_TARBALL)

MPC_VERSION=1.0.2
MPC_DIRECTORY=mpc-$(MPC_VERSION)
MPC_TARBALL=$(MPC_DIRECTORY).tar.gz
MPC_URL=http://ftpmirror.gnu.org/mpc/$(MPC_TARBALL)
MPC_DIRECTORY_STAMP=$(MPC_DIRECTORY)/stamp

MPFR_VERSION=3.1.2
MPFR_DIRECTORY=mpfr-$(MPFR_VERSION)
MPFR_TARBALL=$(MPFR_DIRECTORY).tar.xz
MPFR_URL=http://ftpmirror.gnu.org/mpfr/$(MPFR_TARBALL)
MPFR_DIRECTORY_STAMP=$(MPFR_DIRECTORY)/stamp

BINUTILS_VERSION=2.39
BINUTILS_DIRECTORY=binutils-$(BINUTILS_VERSION)
BINUTILS_TARBALL=$(BINUTILS_DIRECTORY).tar.xz
BINUTILS_URL=https://ftp.gnu.org/gnu/binutils/$(BINUTILS_TARBALL)
BINUTILS_DIRECTORY_STAMP=$(BINUTILS_DIRECTORY)/stamp
BINUTILS=$(TOOLCHAIN_DIRECTORY)/binutils

LINUX_VERSION=5.4.240
LINUX_DIRECTORY=linux-$(LINUX_VERSION)
LINUX_TARBALL=$(LINUX_DIRECTORY).tar.xz
ifeq ($(TARGET),linux-arm64)
LINUX_URL=http://www.kernel.org/pub/linux/kernel/v5.x/$(LINUX_TARBALL)
else
LINUX_URL=http://www.kernel.org/pub/linux/kernel/v3.x/$(LINUX_TARBALL)
endif
LINUX_DIRECTORY_STAMP=$(LINUX_DIRECTORY)/stamp
LINUX_HEADERS=$(TOOLCHAIN_DIRECTORY)/linux-headers

ifeq ($(TARGET),linux-arm64)
GLIBC_VERSION=2.28-225.el8
else
GLIBC_VERSION=2.12-1.212.el6
endif
GLIBC_DIRECTORY=glibc-$(GLIBC_VERSION)-$(TOOLCHAIN_ARCH)
GLIBC_DIRECTORY_STAMP=$(GLIBC_DIRECTORY)/stamp
GLIBC_RPM=glibc-$(GLIBC_VERSION).$(TOOLCHAIN_ARCH).rpm
GLIBC_DEVEL_RPM=glibc-devel-$(GLIBC_VERSION).$(TOOLCHAIN_ARCH).rpm
ifeq ($(TARGET),linux-arm64)
GLIBC_STATIC_RPM=
else
GLIBC_STATIC_RPM=glibc-static-$(GLIBC_VERSION).$(TOOLCHAIN_ARCH).rpm
endif
GLIBC_HEADERS_RPM=glibc-headers-$(GLIBC_VERSION).$(TOOLCHAIN_ARCH).rpm
GLIBC_COMMON_RPM=glibc-common-$(GLIBC_VERSION).$(TOOLCHAIN_ARCH).rpm
GLIBC=$(TOOLCHAIN_DIRECTORY)/glibc

GCC_VERSION=8.5.0
GCC_DIRECTORY=gcc-$(GCC_VERSION)
GCC_TARBALL=$(GCC_DIRECTORY).tar.xz
GCC_URL=https://ftp.gnu.org/gnu/gcc/$(GCC_DIRECTORY)/$(GCC_TARBALL)
GCC_DIRECTORY_STAMP=$(GCC_DIRECTORY)/stamp

GCC=$(TOOLCHAIN_DIRECTORY)/gcc

XPROTO_VERSION=7.0.31
XPROTO_DIRECTORY=xproto-$(XPROTO_VERSION)
XPROTO_TARBALL=$(XPROTO_DIRECTORY).tar.gz
XPROTO_URL=https://www.x.org/releases/individual/proto/$(XPROTO_TARBALL)
XPROTO_DIRECTORY_STAMP=$(XPROTO_DIRECTORY)/stamp
XPROTO=$(TOOLCHAIN_DIRECTORY)/xproto

XF86VIDMODEPROTO_VERSION=2.3.1
XF86VIDMODEPROTO_DIRECTORY=xf86vidmodeproto-$(XF86VIDMODEPROTO_VERSION)
XF86VIDMODEPROTO_TARBALL=$(XF86VIDMODEPROTO_DIRECTORY).tar.gz
XF86VIDMODEPROTO_URL=https://www.x.org/releases/individual/proto/$(XF86VIDMODEPROTO_TARBALL)
XF86VIDMODEPROTO_DIRECTORY_STAMP=$(XF86VIDMODEPROTO_DIRECTORY)/stamp
XF86VIDMODEPROTO=$(TOOLCHAIN_DIRECTORY)/xf86vidmodeproto

GLPROTO_VERSION=1.4.17
GLPROTO_DIRECTORY=glproto-$(GLPROTO_VERSION)
GLPROTO_TARBALL=$(GLPROTO_DIRECTORY).tar.gz
GLPROTO_URL=https://www.x.org/releases/individual/proto/$(GLPROTO_TARBALL)
GLPROTO_DIRECTORY_STAMP=$(GLPROTO_DIRECTORY)/stamp
GLPROTO=$(TOOLCHAIN_DIRECTORY)/glproto

DRI2PROTO_VERSION=2.8
DRI2PROTO_DIRECTORY=dri2proto-$(DRI2PROTO_VERSION)
DRI2PROTO_TARBALL=$(DRI2PROTO_DIRECTORY).tar.gz
DRI2PROTO_URL=https://www.x.org/releases/individual/proto/$(DRI2PROTO_TARBALL)
DRI2PROTO_DIRECTORY_STAMP=$(DRI2PROTO_DIRECTORY)/stamp
DRI2PROTO=$(TOOLCHAIN_DIRECTORY)/dri2proto

FIXESPROTO_VERSION=5.0
FIXESPROTO_DIRECTORY=fixesproto-$(FIXESPROTO_VERSION)
FIXESPROTO_TARBALL=$(FIXESPROTO_DIRECTORY).tar.gz
FIXESPROTO_URL=https://www.x.org/releases/individual/proto/$(FIXESPROTO_TARBALL)
FIXESPROTO_DIRECTORY_STAMP=$(FIXESPROTO_DIRECTORY)/stamp
FIXESPROTO=$(TOOLCHAIN_DIRECTORY)/fixesproto

XF86BIGFONTPROTO_VERSION=1.2.0
XF86BIGFONTPROTO_DIRECTORY=xf86bigfontproto-$(XF86BIGFONTPROTO_VERSION)
XF86BIGFONTPROTO_TARBALL=$(XF86BIGFONTPROTO_DIRECTORY).tar.gz
XF86BIGFONTPROTO_URL=https://www.x.org/releases/individual/proto/$(XF86BIGFONTPROTO_TARBALL)
XF86BIGFONTPROTO_DIRECTORY_STAMP=$(XF86BIGFONTPROTO_DIRECTORY)/stamp
XF86BIGFONTPROTO=$(TOOLCHAIN_DIRECTORY)/xf86bigfontproto

KBPROTO_VERSION=1.0.7
KBPROTO_DIRECTORY=kbproto-$(KBPROTO_VERSION)
KBPROTO_TARBALL=$(KBPROTO_DIRECTORY).tar.gz
KBPROTO_URL=https://www.x.org/releases/individual/proto/$(KBPROTO_TARBALL)
KBPROTO_DIRECTORY_STAMP=$(KBPROTO_DIRECTORY)/stamp
KBPROTO=$(TOOLCHAIN_DIRECTORY)/kbproto

INPUTPROTO_VERSION=2.3.2
INPUTPROTO_DIRECTORY=inputproto-$(INPUTPROTO_VERSION)
INPUTPROTO_TARBALL=$(INPUTPROTO_DIRECTORY).tar.gz
INPUTPROTO_URL=https://www.x.org/releases/individual/proto/$(INPUTPROTO_TARBALL)
INPUTPROTO_DIRECTORY_STAMP=$(INPUTPROTO_DIRECTORY)/stamp
INPUTPROTO=$(TOOLCHAIN_DIRECTORY)/inputproto

XCBPROTO_VERSION=1.15.2
XCBPROTO_DIRECTORY=xcb-proto-$(XCBPROTO_VERSION)
XCBPROTO_TARBALL=$(XCBPROTO_DIRECTORY).tar.gz
XCBPROTO_URL=https://www.x.org/releases/individual/proto/$(XCBPROTO_TARBALL)
XCBPROTO_DIRECTORY_STAMP=$(XCBPROTO_DIRECTORY)/stamp
XCBPROTO=$(TOOLCHAIN_DIRECTORY)/xcb-proto

XEXTPROTO_VERSION=7.3.0
XEXTPROTO_DIRECTORY=xextproto-$(XEXTPROTO_VERSION)
XEXTPROTO_TARBALL=$(XEXTPROTO_DIRECTORY).tar.gz
XEXTPROTO_URL=https://www.x.org/releases/individual/proto/$(XEXTPROTO_TARBALL)
XEXTPROTO_DIRECTORY_STAMP=$(XEXTPROTO_DIRECTORY)/stamp
XEXTPROTO=$(TOOLCHAIN_DIRECTORY)/xextproto

RANDRPROTO_VERSION=1.5.0
RANDRPROTO_DIRECTORY=randrproto-$(RANDRPROTO_VERSION)
RANDRPROTO_TARBALL=$(RANDRPROTO_DIRECTORY).tar.gz
RANDRPROTO_URL=https://www.x.org/releases/individual/proto/$(RANDRPROTO_TARBALL)
RANDRPROTO_DIRECTORY_STAMP=$(RANDRPROTO_DIRECTORY)/stamp
RANDRPROTO=$(TOOLCHAIN_DIRECTORY)/randrproto

RENDERPROTO_VERSION=0.11
RENDERPROTO_DIRECTORY=renderproto-$(RENDERPROTO_VERSION)
RENDERPROTO_TARBALL=$(RENDERPROTO_DIRECTORY).tar.gz
RENDERPROTO_URL=https://www.x.org/releases/individual/proto/$(RENDERPROTO_TARBALL)
RENDERPROTO_DIRECTORY_STAMP=$(RENDERPROTO_DIRECTORY)/stamp
RENDERPROTO=$(TOOLCHAIN_DIRECTORY)/renderproto

LIBXAU_VERSION=1.0.11
LIBXAU_DIRECTORY=libXau-$(LIBXAU_VERSION)
LIBXAU_TARBALL=$(LIBXAU_DIRECTORY).tar.gz
LIBXAU_URL=https://www.x.org/releases/individual/lib/$(LIBXAU_TARBALL)
LIBXAU_DIRECTORY_STAMP=$(LIBXAU_DIRECTORY)/stamp
LIBXAU=$(TOOLCHAIN_DIRECTORY)/libxau

LIBXXF86VM_VERSION=1.1.5
LIBXXF86VM_DIRECTORY=libXxf86vm-$(LIBXXF86VM_VERSION)
LIBXXF86VM_TARBALL=$(LIBXXF86VM_DIRECTORY).tar.gz
LIBXXF86VM_URL=https://www.x.org/releases/individual/lib/$(LIBXXF86VM_TARBALL)
LIBXXF86VM_DIRECTORY_STAMP=$(LIBXXF86VM_DIRECTORY)/stamp
LIBXXF86VM=$(TOOLCHAIN_DIRECTORY)/libxxf86vm

LIBXCB_VERSION=1.15
LIBXCB_DIRECTORY=libxcb-$(LIBXCB_VERSION)
LIBXCB_TARBALL=$(LIBXCB_DIRECTORY).tar.gz
LIBXCB_URL=https://www.x.org/releases/individual/lib/$(LIBXCB_TARBALL)
LIBXCB_DIRECTORY_STAMP=$(LIBXCB_DIRECTORY)/stamp
LIBXCB=$(TOOLCHAIN_DIRECTORY)/libxcb

LIBX11_VERSION=1.8.4
LIBX11_DIRECTORY=libX11-$(LIBX11_VERSION)
LIBX11_TARBALL=$(LIBX11_DIRECTORY).tar.xz
LIBX11_URL=https://www.x.org/releases/individual/lib/$(LIBX11_TARBALL)
LIBX11_DIRECTORY_STAMP=$(LIBX11_DIRECTORY)/stamp
LIBX11=$(TOOLCHAIN_DIRECTORY)/libx11

LIBXFIXES_VERSION=5.0.3
LIBXFIXES_DIRECTORY=libXfixes-$(LIBXFIXES_VERSION)
LIBXFIXES_TARBALL=$(LIBXFIXES_DIRECTORY).tar.gz
LIBXFIXES_URL=https://www.x.org/releases/individual/lib/$(LIBXFIXES_TARBALL)
LIBXFIXES_DIRECTORY_STAMP=$(LIBXFIXES_DIRECTORY)/stamp
LIBXFIXES=$(TOOLCHAIN_DIRECTORY)/libxfixes

LIBXEXT_VERSION=1.3.5
LIBXEXT_DIRECTORY=libXext-$(LIBXEXT_VERSION)
LIBXEXT_TARBALL=$(LIBXEXT_DIRECTORY).tar.xz
LIBXEXT_URL=https://www.x.org/releases/individual/lib/$(LIBXEXT_TARBALL)
LIBXEXT_DIRECTORY_STAMP=$(LIBXEXT_DIRECTORY)/stamp
LIBXEXT=$(TOOLCHAIN_DIRECTORY)/libxext

XTRANS_VERSION=1.2.7
XTRANS_DIRECTORY=xtrans-$(XTRANS_VERSION)
XTRANS_TARBALL=$(XTRANS_DIRECTORY).tar.gz
XTRANS_URL=https://www.x.org/releases/individual/lib/$(XTRANS_TARBALL)
XTRANS_DIRECTORY_STAMP=$(XTRANS_DIRECTORY)/stamp
XTRANS=$(TOOLCHAIN_DIRECTORY)/xtrans

LIBXRANDR_VERSION=1.5.3
LIBXRANDR_DIRECTORY=libXrandr-$(LIBXRANDR_VERSION)
LIBXRANDR_TARBALL=$(LIBXRANDR_DIRECTORY).tar.gz
LIBXRANDR_URL=https://www.x.org/releases/individual/lib/$(LIBXRANDR_TARBALL)
LIBXRANDR_DIRECTORY_STAMP=$(LIBXRANDR_DIRECTORY)/stamp
LIBXRANDR=$(TOOLCHAIN_DIRECTORY)/libxrandr

LIBXRENDER_VERSION=0.9.11
LIBXRENDER_DIRECTORY=libXrender-$(LIBXRENDER_VERSION)
LIBXRENDER_TARBALL=$(LIBXRENDER_DIRECTORY).tar.gz
LIBXRENDER_URL=https://www.x.org/releases/individual/lib/$(LIBXRENDER_TARBALL)
LIBXRENDER_DIRECTORY_STAMP=$(LIBXRENDER_DIRECTORY)/stamp
LIBXRENDER=$(TOOLCHAIN_DIRECTORY)/libxrender

LIBXI_VERSION=1.7.10
LIBXI_DIRECTORY=libXi-$(LIBXI_VERSION)
LIBXI_TARBALL=$(LIBXI_DIRECTORY).tar.gz
LIBXI_URL=https://www.x.org/releases/individual/lib/$(LIBXI_TARBALL)
LIBXI_DIRECTORY_STAMP=$(LIBXI_DIRECTORY)/stamp
LIBXI=$(TOOLCHAIN_DIRECTORY)/libxi

LIBXSHMFENCE_VERSION=1.3.2
LIBXSHMFENCE_DIRECTORY=libxshmfence-$(LIBXSHMFENCE_VERSION)
LIBXSHMFENCE_TARBALL=$(LIBXSHMFENCE_DIRECTORY).tar.xz
LIBXSHMFENCE_URL=https://www.x.org/releases/individual/lib/$(LIBXSHMFENCE_TARBALL)
LIBXSHMFENCE_DIRECTORY_STAMP=$(LIBXSHMFENCE_DIRECTORY)/stamp
LIBXSHMFENCE=$(TOOLCHAIN_DIRECTORY)/libxshmfence

LIBSNDFILE_VERSION=1.0.28
LIBSNDFILE_DIRECTORY=libsndfile-$(LIBSNDFILE_VERSION)
LIBSNDFILE_TARBALL=$(LIBSNDFILE_DIRECTORY).tar.gz
LIBSNDFILE_URL=http://www.mega-nerd.com/libsndfile/files/$(LIBSNDFILE_TARBALL)
LIBSNDFILE_DIRECTORY_STAMP=$(LIBSNDFILE_DIRECTORY)/stamp
LIBSNDFILE=$(TOOLCHAIN_DIRECTORY)/libsndfile

LIBTOOL_VERSION=2.4.6
LIBTOOL_DIRECTORY=libtool-$(LIBTOOL_VERSION)
LIBTOOL_TARBALL=$(LIBTOOL_DIRECTORY).tar.gz
LIBTOOL_URL=https://ftpmirror.gnu.org/libtool/$(LIBTOOL_TARBALL)
LIBTOOL_DIRECTORY_STAMP=$(LIBTOOL_DIRECTORY)/stamp
LIBTOOL=$(TOOLCHAIN_DIRECTORY)/libtoool

PULSEAUDIO_VERSION=16.1
PULSEAUDIO_DIRECTORY=pulseaudio-$(PULSEAUDIO_VERSION)
PULSEAUDIO_TARBALL=$(PULSEAUDIO_DIRECTORY).tar.gz
PULSEAUDIO_URL=https://freedesktop.org/software/pulseaudio/releases/$(PULSEAUDIO_TARBALL)
PULSEAUDIO_DIRECTORY_STAMP=$(PULSEAUDIO_DIRECTORY)/stamp
PULSEAUDIO=$(TOOLCHAIN_DIRECTORY)/pulseaudio

ALSA_LIB_VERSION=1.2.8
ALSA_LIB_DIRECTORY=alsa-lib-$(ALSA_LIB_VERSION)
ALSA_LIB_TARBALL=$(ALSA_LIB_DIRECTORY).tar.bz2
ALSA_LIB_URL=http://www.alsa-project.org/files/pub/lib/$(ALSA_LIB_TARBALL)
ALSA_LIB_DIRECTORY_STAMP=$(ALSA_LIB_DIRECTORY)/stamp
ALSA_LIB=$(TOOLCHAIN_DIRECTORY)/alsa-lib

GLIB_VERSION=2.76.1
GLIB_DIRECTORY=glib-$(GLIB_VERSION)
GLIB_TARBALL=$(GLIB_DIRECTORY).tar.xz
GLIB_URL=https://download.gnome.org/sources/glib/2.76/$(GLIB_TARBALL)
GLIB_DIRECTORY_STAMP=$(GLIB_DIRECTORY)/stamp
GLIB=$(TOOLCHAIN_DIRECTORY)/glib

LIBDRM_VERSION=2.4.115
LIBDRM_DIRECTORY=libdrm-$(LIBDRM_VERSION)
LIBDRM_TARBALL=$(LIBDRM_DIRECTORY).tar.xz
LIBDRM_URL=https://dri.freedesktop.org/libdrm/$(LIBDRM_TARBALL)
LIBDRM_DIRECTORY_STAMP=$(LIBDRM_DIRECTORY)/stamp
LIBDRM=$(TOOLCHAIN_DIRECTORY)/libdrm

LIBXML2_VERSION=2.10.4
LIBXML2_DIRECTORY=libxml2-$(LIBXML2_VERSION)
LIBXML2_TARBALL=$(LIBXML2_DIRECTORY).tar.xz
LIBXML2_URL=https://download.gnome.org/sources/libxml2/2.10/$(LIBXML2_TARBALL)
LIBXML2_DIRECTORY_STAMP=$(LIBXML2_DIRECTORY)/stamp
LIBXML2=$(TOOLCHAIN_DIRECTORY)/libxml2

EXPAT_VERSION=2.5.0
EXPAT_DIRECTORY=expat-$(EXPAT_VERSION)
EXPAT_TARBALL=$(EXPAT_DIRECTORY).tar.xz
EXPAT_URL=https://github.com/libexpat/libexpat/releases/download/R_2_5_0/$(EXPAT_TARBALL)
EXPAT_DIRECTORY_STAMP=$(EXPAT_DIRECTORY)/stamp
EXPAT=$(TOOLCHAIN_DIRECTORY)/expat

MESA_VERSION=23.0.2
MESA_DIRECTORY=mesa-$(MESA_VERSION)
MESA_TARBALL=$(MESA_DIRECTORY).tar.xz
MESA_URL=https://archive.mesa3d.org/$(MESA_TARBALL)
MESA_DIRECTORY_STAMP=$(MESA_DIRECTORY)/stamp
MESA=$(TOOLCHAIN_DIRECTORY)/mesa

WAYLAND_VERSION=1.22.0
WAYLAND_DIRECTORY=wayland-$(WAYLAND_VERSION)
WAYLAND_TARBALL=$(WAYLAND_DIRECTORY).tar.xz
WAYLAND_URL=https://gitlab.freedesktop.org/wayland/wayland/-/releases/$(WAYLAND_VERSION)/downloads/$(WAYLAND_TARBALL)
WAYLAND_DIRECTORY_STAMP=$(WAYLAND_DIRECTORY)/stamp
WAYLAND=$(TOOLCHAIN_DIRECTORY)/wayland

WAYLAND_SCANNER=$(TOOLCHAIN_DIRECTORY)/wayland-scanner

LIBXKBCOMMON_VERSION=1.5.0
LIBXKBCOMMON_DIRECTORY=libxkbcommon-$(LIBXKBCOMMON_VERSION)
LIBXKBCOMMON_TARBALL=$(LIBXKBCOMMON_DIRECTORY).tar.xz
LIBXKBCOMMON_URL=https://xkbcommon.org/download/$(LIBXKBCOMMON_TARBALL)
LIBXKBCOMMON_DIRECTORY_STAMP=$(LIBXKBCOMMON_DIRECTORY)/stamp
LIBXKBCOMMON=$(TOOLCHAIN_DIRECTORY)/libxkbcommon

PKG_CONFIG=$(TOOLCHAIN_DIRECTORY)/pkg-config

$(GLIBC_RPM) $(GLIBC_DEVEL_RPM) $(GLIBC_STATIC_RPM) $(GLIBC_HEADERS_RPM) $(GLIBC_COMMON_RPM):
ifeq ($(TARGET),linux-arm64)
	sh download.sh https://rpmfind.net/linux/centos/8-stream/BaseOS/aarch64/os/Packages/$@ $@
else
	sh download.sh https://vault.centos.org/6.10/os/$(RHEL_ARCH)/Packages/$@ $@
endif

$(MPFR_TARBALL):
	sh download.sh $(MPFR_URL) $@

$(GMP_TARBALL):
	sh download.sh $(GMP_URL) $@

$(MPC_TARBALL):
	sh download.sh $(MPC_URL) $@

$(GLIBC_TARBALL):
	sh download.sh $(GLIBC_URL) $@

$(GCC_TARBALL):
	sh download.sh $(GCC_URL) $@

$(BINUTILS_TARBALL):
	sh download.sh $(BINUTILS_URL) $@

$(LINUX_TARBALL):
	sh download.sh $(LINUX_URL) $@

$(XPROTO_TARBALL):
	sh download.sh $(XPROTO_URL) $@

$(XF86VIDMODEPROTO_TARBALL):
	sh download.sh $(XF86VIDMODEPROTO_URL) $@

$(GLPROTO_TARBALL):
	sh download.sh $(GLPROTO_URL) $@

$(DRI2PROTO_TARBALL):
	sh download.sh $(DRI2PROTO_URL) $@

$(FIXESPROTO_TARBALL):
	sh download.sh $(FIXESPROTO_URL) $@

$(XF86BIGFONTPROTO_TARBALL):
	sh download.sh $(XF86BIGFONTPROTO_URL) $@

$(KBPROTO_TARBALL):
	sh download.sh $(KBPROTO_URL) $@

$(INPUTPROTO_TARBALL):
	sh download.sh $(INPUTPROTO_URL) $@

$(XEXTPROTO_TARBALL):
	sh download.sh $(XEXTPROTO_URL) $@

$(RANDRPROTO_TARBALL):
	sh download.sh $(RANDRPROTO_URL) $@

$(RENDERPROTO_TARBALL):
	sh download.sh $(RENDERPROTO_URL) $@

$(XCBPROTO_TARBALL):
	sh download.sh $(XCBPROTO_URL) $@

$(LIBXAU_TARBALL):
	sh download.sh $(LIBXAU_URL) $@

$(LIBXXF86VM_TARBALL):
	sh download.sh $(LIBXXF86VM_URL) $@

$(LIBX11_TARBALL):
	sh download.sh $(LIBX11_URL) $@

$(LIBXFIXES_TARBALL):
	sh download.sh $(LIBXFIXES_URL) $@

$(LIBXEXT_TARBALL):
	sh download.sh $(LIBXEXT_URL) $@

$(LIBXCB_TARBALL):
	sh download.sh $(LIBXCB_URL) $@

$(XTRANS_TARBALL):
	sh download.sh $(XTRANS_URL) $@

$(LIBXRANDR_TARBALL):
	sh download.sh $(LIBXRANDR_URL) $@

$(LIBXRENDER_TARBALL):
	sh download.sh $(LIBXRENDER_URL) $@

$(LIBXI_TARBALL):
	sh download.sh $(LIBXI_URL) $@

$(LIBXSHMFENCE_TARBALL):
	sh download.sh $(LIBXSHMFENCE_URL) $@

$(LIBSNDFILE_TARBALL):
	sh download.sh $(LIBSNDFILE_URL) $@

$(LIBTOOL_TARBALL):
	sh download.sh $(LIBTOOL_URL) $@

$(PULSEAUDIO_TARBALL):
	sh download.sh $(PULSEAUDIO_URL) $@

$(ALSA_LIB_TARBALL):
	sh download.sh $(ALSA_LIB_URL) $@

$(GLIB_TARBALL):
	sh download.sh $(GLIB_URL) $@

$(LIBDRM_TARBALL):
	sh download.sh $(LIBDRM_URL) $@

$(LIBXML2_TARBALL):
	sh download.sh $(LIBXML2_URL) $@

$(EXPAT_TARBALL):
	sh download.sh $(EXPAT_URL) $@

$(MESA_TARBALL):
	sh download.sh $(MESA_URL) $@

$(WAYLAND_TARBALL):
	sh download.sh $(WAYLAND_URL) $@

$(LIBXKBCOMMON_TARBALL):
	sh download.sh $(LIBXKBCOMMON_URL) $@

$(MPFR_DIRECTORY_STAMP): $(MPFR_TARBALL)
	tar xf $<
	touch $@

$(GMP_DIRECTORY_STAMP): $(GMP_TARBALL)
	tar xf $<
	touch $@

$(MPC_DIRECTORY_STAMP): $(MPC_TARBALL)
	tar xf $<
	touch $@

$(GLIBC_DIRECTORY_STAMP): $(GLIBC_RPM) $(GLIBC_DEVEL_RPM) $(GLIBC_STATIC_RPM) $(GLIBC_HEADERS_RPM) $(GLIBC_COMMON_RPM)
	mkdir -m 755 -p $(GLIBC_DIRECTORY)
	cd $(GLIBC_DIRECTORY) && for RPM in $^; do 7z -y x ../$$RPM || exit 1; CPIO=$${RPM%.rpm}.cpio; cpio -imd < "$$CPIO" ; rm -f $$CPIO ; done
ifeq ($(LIB64),1)
	for L in $(GLIBC_DIRECTORY)/usr/lib64/*; do LINK=$$(readlink "$$L"); case "$$LINK" in ../../lib64/*) LINK=$${LINK#../../lib64/}; ln -sf "$$LINK" "$$L";; esac; done
else
	for L in $(GLIBC_DIRECTORY)/usr/lib/*; do LINK=$$(readlink "$$L"); case "$$LINK" in ../../lib/*) LINK=$${LINK#../../lib/}; ln -sf "$$LINK" "$$L";; esac; done
endif
	cp -a $(GLIBC_DIRECTORY)/usr/* $(GLIBC_DIRECTORY)/
ifeq ($(LIB64),1)
	mv $(GLIBC_DIRECTORY)/lib64/* $(GLIBC_DIRECTORY)/lib/
	rmdir $(GLIBC_DIRECTORY)/lib64
endif
	rm -rf $(GLIBC_DIRECTORY)/usr
	touch $@

$(GCC_DIRECTORY_STAMP): $(GCC_TARBALL) $(MPFR_DIRECTORY_STAMP) $(GMP_DIRECTORY_STAMP) $(MPC_DIRECTORY_STAMP)
	tar xf $<
	cd $(GCC_DIRECTORY) && ln -sf ../$(MPFR_DIRECTORY) mpfr
	cd $(GCC_DIRECTORY) && ln -sf ../$(GMP_DIRECTORY) gmp
	cd $(GCC_DIRECTORY) && ln -sf ../$(MPC_DIRECTORY) mpc
	touch $@

$(LINUX_DIRECTORY_STAMP): $(LINUX_TARBALL)
	tar xf $<
	touch $@

$(BINUTILS_DIRECTORY_STAMP): $(BINUTILS_TARBALL)
	tar xf $<
	touch $@

$(XPROTO_DIRECTORY_STAMP): $(XPROTO_TARBALL)
	tar xf $<
	touch $@

$(XF86VIDMODEPROTO_DIRECTORY_STAMP): $(XF86VIDMODEPROTO_TARBALL)
	tar xf $<
	touch $@

$(GLPROTO_DIRECTORY_STAMP): $(GLPROTO_TARBALL)
	tar xf $<
	touch $@

$(DRI2PROTO_DIRECTORY_STAMP): $(DRI2PROTO_TARBALL)
	tar xf $<
	touch $@

$(FIXESPROTO_DIRECTORY_STAMP): $(FIXESPROTO_TARBALL)
	tar xf $<
	touch $@

$(XF86BIGFONTPROTO_DIRECTORY_STAMP): $(XF86BIGFONTPROTO_TARBALL)
	tar xf $<
	touch $@

$(KBPROTO_DIRECTORY_STAMP): $(KBPROTO_TARBALL)
	tar xf $<
	touch $@

$(INPUTPROTO_DIRECTORY_STAMP): $(INPUTPROTO_TARBALL)
	tar xf $<
	touch $@

$(XCBPROTO_DIRECTORY_STAMP): $(XCBPROTO_TARBALL)
	tar xf $<
	touch $@

$(XEXTPROTO_DIRECTORY_STAMP): $(XEXTPROTO_TARBALL)
	tar xf $<
	touch $@

$(RANDRPROTO_DIRECTORY_STAMP): $(RANDRPROTO_TARBALL)
	tar xf $<
	touch $@

$(RENDERPROTO_DIRECTORY_STAMP): $(RENDERPROTO_TARBALL)
	tar xf $<
	touch $@

$(LIBXAU_DIRECTORY_STAMP): $(LIBXAU_TARBALL)
	tar xf $<
	touch $@

$(LIBXXF86VM_DIRECTORY_STAMP): $(LIBXXF86VM_TARBALL)
	tar xf $<
	touch $@

$(LIBXCB_DIRECTORY_STAMP): $(LIBXCB_TARBALL)
	tar xf $<
	touch $@

$(LIBX11_DIRECTORY_STAMP): $(LIBX11_TARBALL)
	tar xf $<
	touch $@

$(LIBXFIXES_DIRECTORY_STAMP): $(LIBXFIXES_TARBALL)
	tar xf $<
	touch $@

$(LIBXEXT_DIRECTORY_STAMP): $(LIBXEXT_TARBALL)
	tar xf $<
	touch $@

$(XTRANS_DIRECTORY_STAMP): $(XTRANS_TARBALL)
	tar xf $<
	touch $@

$(LIBXRANDR_DIRECTORY_STAMP): $(LIBXRANDR_TARBALL)
	tar xf $<
	touch $@

$(LIBXRENDER_DIRECTORY_STAMP): $(LIBXRENDER_TARBALL)
	tar xf $<
	touch $@

$(LIBXI_DIRECTORY_STAMP): $(LIBXI_TARBALL)
	tar xf $<
	touch $@

$(LIBXSHMFENCE_DIRECTORY_STAMP): $(LIBXSHMFENCE_TARBALL)
	tar xf $<
	touch $@

$(GLIB_DIRECTORY_STAMP): $(GLIB_TARBALL)
	tar xf $<
	touch $@

$(PULSEAUDIO_DIRECTORY_STAMP): $(PULSEAUDIO_TARBALL)
	tar xf $<
	touch $@

$(ALSA_LIB_DIRECTORY_STAMP): $(ALSA_LIB_TARBALL)
	tar xf $<
	touch $@

$(LIBSNDFILE_DIRECTORY_STAMP): $(LIBSNDFILE_TARBALL)
	tar xf $<
	touch $@

$(LIBTOOL_DIRECTORY_STAMP): $(LIBTOOL_TARBALL)
	tar xf $<
	touch $@

$(LIBDRM_DIRECTORY_STAMP): $(LIBDRM_TARBALL)
	tar xf $<
	touch $@

$(LIBXML2_DIRECTORY_STAMP): $(LIBXML2_TARBALL)
	tar xf $<
	touch $@

$(EXPAT_DIRECTORY_STAMP): $(EXPAT_TARBALL)
	tar xf $<
	touch $@

$(MESA_DIRECTORY_STAMP): $(MESA_TARBALL)
	tar xf $<
	touch $@

$(WAYLAND_DIRECTORY_STAMP): $(WAYLAND_TARBALL)
	tar xf $<
	touch $@

$(LIBXKBCOMMON_DIRECTORY_STAMP): $(LIBXKBCOMMON_TARBALL)
	tar xf $<
	touch $@

$(BINUTILS): $(BINUTILS_DIRECTORY_STAMP)
	rm -rf $(BINUTILS_DIRECTORY)/build
	mkdir -m755 -p $(BINUTILS_DIRECTORY)/build
	cd $(BINUTILS_DIRECTORY)/build \
	&& ../configure --disable-multilib --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY) \
	&& make \
	&& make install
	touch $@

$(LINUX_HEADERS): $(LINUX_DIRECTORY_STAMP)
	cd $(LINUX_DIRECTORY) && make allyesconfig && make ARCH="$(KERNEL_ARCH)" INSTALL_HDR_PATH="$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)" headers_install
	mkdir -m755 -p $(TOOLCHAIN_DIRECTORY)
	touch $@

$(GLIBC): $(GLIBC_DIRECTORY_STAMP) $(LINUX_HEADERS)
	mkdir -m755 -p $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(GLIBC_DIRECTORY) && cp -a * $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/
ifeq ($(LIB64),1)
ifeq ($(TOOLCHAIN_ARCH),x86_64)
	sed -i 's|^GROUP .*$$|GROUP ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc.so.6 $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc_nonshared.a  AS_NEEDED ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/ld-linux-x86-64.so.2 ) )|' $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc.so
else
	sed -i 's|^GROUP .*$$|GROUP ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc.so.6 $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc_nonshared.a  AS_NEEDED ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/ld-linux-aarch64.so.1 ) )|' $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc.so
endif
	sed -i 's|^GROUP .*$$|GROUP ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libpthread.so.0 $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libpthread_nonshared.a )|' $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libpthread.so
	ln -sf lib $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib64
else
	sed -i 's|^GROUP .*$$|GROUP ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc.so.6 $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc_nonshared.a  AS_NEEDED ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/ld-linux.so.2 ) )|' $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libc.so
	sed -i 's|^GROUP .*$$|GROUP ( $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libpthread.so.0 $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libpthread_nonshared.a )|' $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/lib/libpthread.so
endif
	touch $@

$(GCC): $(GLIBC) $(GCC_DIRECTORY_STAMP) $(BINUTILS)
	rm -rf $(GCC_DIRECTORY)/build
	mkdir -m755 -p $(GCC_DIRECTORY)/build
	cd $(GCC_DIRECTORY)/build \
	&& PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ../configure --disable-multilib --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY) --with-headers=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/include --enable-languages=c,c++ \
	&& PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make \
	&& PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(XPROTO): $(XPROTO_DIRECTORY_STAMP)
	sed -i.bak 's/| a29k\-\* \\/| a29k-* | aarch64-* \\/' $(XPROTO_DIRECTORY)/config.sub
	cd $(XPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(XPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(XPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(XPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(XF86VIDMODEPROTO): $(XF86VIDMODEPROTO_DIRECTORY_STAMP)
	sed -i.bak 's/| a29k\-\* \\/| a29k-* | aarch64-* \\/' $(XF86VIDMODEPROTO_DIRECTORY)/config.sub
	cd $(XF86VIDMODEPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(XF86VIDMODEPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(XF86VIDMODEPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(XF86VIDMODEPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(GLPROTO): $(GLPROTO_DIRECTORY_STAMP)
	cd $(GLPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(GLPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(GLPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(GLPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(DRI2PROTO): $(DRI2PROTO_DIRECTORY_STAMP)
	sed -i.bak 's/| a29k\-\* \\/| a29k-* | aarch64-* \\/' $(DRI2PROTO_DIRECTORY)/config.sub
	cd $(DRI2PROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(DRI2PROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(DRI2PROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(DRI2PROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(FIXESPROTO): $(FIXESPROTO_DIRECTORY_STAMP)
	sed -i.bak 's/| a29k\-\* \\/| a29k-* | aarch64-* \\/' $(FIXESPROTO_DIRECTORY)/config.sub
	cd $(FIXESPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(FIXESPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(FIXESPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(FIXESPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(XF86BIGFONTPROTO): $(XF86BIGFONTPROTO_DIRECTORY_STAMP)
	cd $(XF86BIGFONTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(XF86BIGFONTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(XF86BIGFONTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(XF86BIGFONTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(KBPROTO): $(KBPROTO_DIRECTORY_STAMP)
	cd $(KBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(KBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(KBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(KBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(INPUTPROTO): $(INPUTPROTO_DIRECTORY_STAMP)
	cd $(INPUTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(INPUTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(INPUTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(INPUTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(XCBPROTO): $(XCBPROTO_DIRECTORY_STAMP)
	cd $(XCBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(XCBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(XCBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(XCBPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(XEXTPROTO): $(XEXTPROTO_DIRECTORY_STAMP)
	sed -i.bak 's/| a29k\-\* \\/| a29k-* | aarch64-* \\/' $(XEXTPROTO_DIRECTORY)/config.sub
	cd $(XEXTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(XEXTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(XEXTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(XEXTPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(RANDRPROTO): $(RANDRPROTO_DIRECTORY_STAMP)
	cd $(RANDRPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(RANDRPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(RANDRPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(RANDRPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(RENDERPROTO): $(RENDERPROTO_DIRECTORY_STAMP)
	cd $(RENDERPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(RENDERPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(RENDERPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(RENDERPROTO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXAU): $(LIBXAU_DIRECTORY_STAMP) $(PKG_CONFIG) $(XPROTO)
	cd $(LIBXAU_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXAU_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXAU_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXAU_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXXF86VM): $(LIBXXF86VM_DIRECTORY_STAMP) $(PKG_CONFIG) $(XF86VIDMODEPROTO)
	cd $(LIBXXF86VM_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --enable-malloc0returnsnull --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXXF86VM_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXXF86VM_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXXF86VM_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(XTRANS): $(XTRANS_DIRECTORY_STAMP) $(PKG_CONFIG) $(XPROTO)
	sed -i.bak 's/| a29k\-\* \\/| a29k-* | aarch64-* \\/' $(XTRANS_DIRECTORY)/config.sub
	cd $(XTRANS_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(XTRANS_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(XTRANS_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(XTRANS_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXRANDR): $(LIBXRANDR_DIRECTORY_STAMP) $(PKG_CONFIG) $(LIBXEXT) $(RANDRPROTO) $(LIBXRENDER)
	cd $(LIBXRANDR_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --enable-malloc0returnsnull --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXRANDR_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXRANDR_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXRANDR_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXRENDER): $(LIBXRENDER_DIRECTORY_STAMP) $(PKG_CONFIG) $(LIBXEXT) $(RENDERPROTO)
	cd $(LIBXRENDER_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --enable-malloc0returnsnull --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXRENDER_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXRENDER_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXRENDER_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXSHMFENCE): $(LIBXSHMFENCE_DIRECTORY_STAMP) $(PKG_CONFIG) $(XPROTO)
	cd $(LIBXSHMFENCE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXSHMFENCE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXSHMFENCE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXSHMFENCE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXCB): $(LIBXCB_DIRECTORY_STAMP) $(PKG_CONFIG) $(XCBPROTO) $(LIBXAU)
	cd $(LIBXCB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXCB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXCB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXCB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBX11): $(LIBX11_DIRECTORY_STAMP) $(PKG_CONFIG) $(XTRANS) $(KBPROTO) $(INPUTPROTO) $(XF86BIGFONTPROTO) $(XEXTPROTO) $(LIBXCB)
	cd $(LIBX11_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --enable-malloc0returnsnull --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBX11_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBX11_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBX11_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXEXT): $(LIBXEXT_DIRECTORY_STAMP) $(PKG_CONFIG) $(XEXTPROTO) $(LIBX11)
	cd $(LIBXEXT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --enable-malloc0returnsnull --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXEXT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXEXT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXEXT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXFIXES): $(LIBXFIXES_DIRECTORY_STAMP) $(PKG_CONFIG) $(FIXESPROTO) $(LIBX11)
	cd $(LIBXFIXES_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXFIXES_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXFIXES_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXFIXES_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXI): $(LIBXI_DIRECTORY_STAMP) $(LIBXEXT) $(PKG_CONFIG) $(INPUTPROTO)
	cd $(LIBXI_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --enable-malloc0returnsnull --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXI_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXI_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXI_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBSNDFILE): $(LIBSNDFILE_DIRECTORY_STAMP)
	cd $(LIBSNDFILE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBSNDFILE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBSNDFILE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBSNDFILE_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBTOOL): $(LIBTOOL_DIRECTORY_STAMP)
	cd $(LIBTOOL_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBTOOL_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBTOOL_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBTOOL_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBDRM): $(LIBDRM_DIRECTORY_STAMP) $(MESON_CROSS_TXT)
	rm -rf $(LIBDRM_DIRECTORY)/build
	cd $(LIBDRM_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" meson setup build -Dtests=false --prefix $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET) --cross-file $(MESON_CROSS_TXT)
	cd $(LIBDRM_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja
	cd $(LIBDRM_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja install
	touch $@

$(LIBXML2): $(LIBXML2_DIRECTORY_STAMP)
	cd $(LIBXML2_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --with-python=no --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(LIBXML2_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(LIBXML2_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(LIBXML2_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(EXPAT): $(EXPAT_DIRECTORY_STAMP) $(PKG_CONFIG) $(LIBXML2)
	cd $(EXPAT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(EXPAT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(EXPAT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(EXPAT_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(LIBXKBCOMMON): $(LIBXKBCOMMON_DIRECTORY_STAMP) $(LIBXCB) $(MESON_CROSS_TXT)
	rm -rf $(LIBXKBCOMMON_DIRECTORY)/build
	cd $(LIBXKBCOMMON_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" meson setup build -Denable-wayland=false --prefix $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET) --cross-file $(MESON_CROSS_TXT)
	cd $(LIBXKBCOMMON_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja
	cd $(LIBXKBCOMMON_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja install
	touch $@

$(MESA): $(MESA_DIRECTORY_STAMP) $(PKG_CONFIG) $(LIBDRM) $(LIBXFIXES) $(LIBXSHMFENCE) $(GLPROTO) $(DRI2PROTO) $(LIBXXF86VM) $(LIBXRANDR) $(EXPAT) $(MESON_CROSS_TXT)
	rm -rf $(MESA_DIRECTORY)/build
	cd $(MESA_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" meson setup build -Dc_args='-DSYS_kcmp=__NR_kcmp -Dstatic_assert(x,y)=' -Dplatforms=x11 -Dgallium-drivers=r300 -Dvulkan-drivers=amd -Dllvm=disabled --prefix $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET) --cross-file $(MESON_CROSS_TXT)
	cd $(MESA_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja
	cd $(MESA_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja install
	touch $@

$(WAYLAND_SCANNER): $(WAYLAND_DIRECTORY_STAMP)
	rm -rf $(WAYLAND_DIRECTORY)/build-scanner
	cd $(WAYLAND_DIRECTORY) && meson setup build-scanner --prefix $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/wayland-scanner
	cd $(WAYLAND_DIRECTORY)/build-scanner && ninja
	cd $(WAYLAND_DIRECTORY)/build-scanner && ninja install
	touch $@

$(WAYLAND): $(WAYLAND_DIRECTORY_STAMP) $(PKG_CONFIG) $(EXPAT) $(WAYLAND_SCANNER) $(MESON_CROSS_TXT)
	rm -rf $(WAYLAND_DIRECTORY)/build
	cd $(WAYLAND_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/wayland-scanner/bin:$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" meson setup build --prefix $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET) --cross-file $(MESON_CROSS_TXT)
	cd $(WAYLAND_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/wayland-scanner/bin:$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja
	cd $(WAYLAND_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)/wayland-scanner/bin:$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja install
	touch $@

$(GLIB): $(GLIB_DIRECTORY_STAMP) $(PKG_CONFIG) $(MESON_CROSS_TXT)
	rm -rf $(GLIB_DIRECTORY)/build
	cd $(GLIB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" meson setup build --prefix $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET) --cross-file $(MESON_CROSS_TXT)
	cd $(GLIB_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja
	cd $(GLIB_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja install
	touch $@

$(ALSA_LIB): $(ALSA_LIB_DIRECTORY_STAMP)
	cd $(ALSA_LIB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ./configure --host=$(TOOLCHAIN_TARGET) --target=$(TOOLCHAIN_TARGET) --prefix=$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)
	cd $(ALSA_LIB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make clean
	cd $(ALSA_LIB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make
	cd $(ALSA_LIB_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" make install
	touch $@

$(PULSEAUDIO): $(PULSEAUDIO_DIRECTORY_STAMP) $(PKG_CONFIG) $(GLIB) $(LIBSNDFILE) $(LIBTOOL) $(ALSA_LIB) $(MESON_CROSS_TXT)
	sed -i.bak 's|static_assert|//|' $(PULSEAUDIO_DIRECTORY)/src/pulsecore/shm.c
	rm -rf $(PULSEAUDIO_DIRECTORY)/build
	cd $(PULSEAUDIO_DIRECTORY) && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" meson setup build -Dc_link_args='-lrt' -Ddatabase=simple -Dx11=disabled -Dtests=false --prefix $(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET) --cross-file $(MESON_CROSS_TXT)
	cd $(PULSEAUDIO_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja
	cd $(PULSEAUDIO_DIRECTORY)/build && PATH="$(TOOLCHAIN_DIRECTORY)/bin:$$PATH" ninja install
	touch $@

$(PKG_CONFIG):
	sed 's|%%TARGETDIR%%|$(TOOLCHAIN_DIRECTORY)/$(TOOLCHAIN_TARGET)|g' pkg-config > $(TOOLCHAIN_DIRECTORY)/bin/pkg-config
	chmod 755 $(TOOLCHAIN_DIRECTORY)/bin/pkg-config
	touch $@

$(MESON_CROSS_TXT):
	sed 's/%%TARGET%%/$(TOOLCHAIN_TARGET)/g' cross-meson.txt > $@.tmp
	sed -i.bak 's/%%MESON_CPU_FAMILY%%/$(MESON_CPU_FAMILY)/g' $@.tmp
	sed -i.bak 's/%%MESON_CPU%%/$(MESON_CPU)/g' $@.tmp
	mv $@.tmp $@

all: $(GCC) $(LIBX11) $(LIBXI) $(LIBXEXT) $(PULSEAUDIO) $(LIBDRM) $(MESA) $(WAYLAND) $(LIBXKBCOMMON)
